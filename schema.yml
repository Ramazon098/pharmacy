openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /accounts/create-user/:
    post:
      operationId: accounts_create_user_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser'
          description: ''
  /accounts/login/:
    post:
      operationId: accounts_login_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginUser'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUser'
          description: ''
  /accounts/logout/:
    post:
      operationId: accounts_logout_create
      tags:
      - accounts
      responses:
        '200':
          description: No response body
  /accounts/logout-all/:
    post:
      operationId: accounts_logout_all_create
      description: |-
        Log the user out of all sessions
        I.E. deletes all auth tokens for the user
      tags:
      - accounts
      responses:
        '200':
          description: No response body
  /accounts/update-user/{id}/:
    put:
      operationId: accounts_update_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
    patch:
      operationId: accounts_update_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
  /accounts/users/:
    get:
      operationId: accounts_users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /products/product/:
    get:
      operationId: products_product_retrieve
      tags:
      - products
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: products_product_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/product/{id}/:
    get:
      operationId: products_product_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_product_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_product_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - {}
      responses:
        '204':
          description: No response body
  /products/search-product/:
    get:
      operationId: products_search_product_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - products
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
components:
  schemas:
    CreateUser:
      type: object
      properties:
        username:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
        password2:
          type: string
      required:
      - email
      - password
      - password2
      - username
    LoginUser:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedUpdateUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          maxLength: 128
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        manufacturer:
          type: string
          maxLength: 100
        expiration_date:
          type: string
          format: date
        addition_date:
          type: string
          format: date
          readOnly: true
        barcode:
          type: string
          maxLength: 50
        amount:
          type: integer
        info:
          type: string
      required:
      - addition_date
      - amount
      - barcode
      - expiration_date
      - id
      - manufacturer
      - price
      - title
    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          maxLength: 128
      required:
      - email
      - first_name
      - last_name
      - password
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - first_name
      - id
      - last_name
      - username
